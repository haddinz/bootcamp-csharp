```mermaid
    classDiagram

        class GameStatus {
            <<enum>>
            Active
            BlackWin
            WhiteWin
            Stalemate
            Resignation
        }

        class PieceColor {
            <<enum>>
            White
            Black
        }

        class IPlayer {
            <<interface>>
            +String PlayerName
            +List<IPiece> Pieces

            +bool IsChecked()
        }

        class IPiece {
            <<interface>>
            +bool Killed 
            +PieceColor PieceColor

            +bool IsKilled()
            +bool CanMove()
        }

        class Box {
            +int X 
            +int Y

            +int GetX()
            +int GetY()
        }

        class Board {
            +ArrayList<Box> Boxes

            +list<IPiece> GetPieces()
        }

        class Piece {
            +bool Killed
            +PieceColor PieceColor

            +bool IsKilled()
            +bool CanMove()
        }

        class King {
            +bool CastlingDone

            +bool CanMove()
        }

        class Queen {
            +bool CanMove()
        }

        class Bishop {
            +bool CanMove()
        }

        class Knight {
            +bool CanMove()
        }
        
        class Rook {
            +bool CanMove()
        }

        class Pawn {
            +bool EnPassant
            +bool CanPromote

            +bool CanMove()
            +void SetEnPassant()
            +void SetCanPromote()
        }

        class Player {
            +String PlayerName
            +List<IPiece> Pieces

            +bool IsChecked()
        }

        class GameController {
            +Action<List<IPlayer>> OnMovesPlayedHistory
            +List<IPlayer> MovesPlayer
            +Dictionary<IPlayer, List<IPiece>> PlayerPieceDictionary
            +GameStatus Status
            +IPlayer CurrentTurn
            +IPiece PieceKilled
            +Box StartBox
            +Box EndingBox
            +bool IsCastlingMove
            
            +bool ValidateMove()
            +bool IsOver()
            +bool PlayerMove()
            +bool MakeMove()
            +void SetPlayerGameStatus()
            +void SwitchTurn()
            +bool IsEnPassant()
            +bool checkPromotion()
            +void SetCastlingMove()
        }

        class Display {
            +bool DisplayMove()
        }

        GameController --> Display
        GameController --> Board
        GameController --> Box
        GameController --> IPiece
        GameController --> IPlayer

        Player --> IPlayer

        Board --> Box
        Board --> Piece

        Piece --> IPiece

        Piece <|-- King
        Piece <|-- Queen
        Piece <|-- Bishop
        Piece <|-- Knight
        Piece <|-- Rook
        Piece <|-- Pawn

```